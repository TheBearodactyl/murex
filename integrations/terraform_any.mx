/#
 # Normally we'd want code like the below. However because the terraform
 # executable might not be in $PATH due to the `devops` module, and an
 # autocompletion against a command that doesn't exist isn't going to cause
 # any damage, lets all this code to run regardless of whether `terraform`
 # is installed or not. 
 #
 # !if { which terraform } then {
 #    return
 # }
 #/

!if { man-summary terraform } then {
    summary terraform "Write, Plan, and Create Infrastructure as Code"
}

private autocomplete.terraform {
    cast json
    config set proc strict-arrays false

    if { $1 == "workspace" && $2 == "select" } then {
        terraform workspace list \
        -> regexp (s/^[\s\*]+//) \
        -> [..-2] -> suffix ': "Terraform workspace"' \
        -> grep -v "^:" \
        -> cast yaml \
        -> format json

    } else {
        terraform -help @PARAMS \
        -> tabulate --map --column-wraps --key-inc-hint
    }
}

test unit private autocomplete.terraform %{
    StdoutType:        json
    StdoutGreaterThan: 10
	StdoutIsMap:       true
}

autocomplete: set terraform %[
    {
        DynamicDesc: '{
            config set proc strict-arrays false
            autocomplete.terraform @PARAMS
        }'
        AllowMultiple: true
        AllowAny:      true
        ListView:      true
        CacheTTL:      60
    }
]