autocomplete set tmux %[
    { Dynamic: "{ tmux-commands }"    }
    { Dynamic: "{ tmux-subcommands }" }
]

private tmux-commands {
    # Parse `tmux` command line arguments
    tmux start\; list-commands -> [:0]
}

test unit private tmux-commands %{
    StdoutRegex: '([-a-z]+\n)+'
}

private tmux-subcommands {
    # Parses `tmux` command line arguments
    tmux start\; list-commands -> regexp m/$ARGS[1]/ -> regexp 'f#\[\-([-a-zA-Z0-9]+)#' -> foreach { -> jsplit "" -> format * } -> regexp m/[a-zA-Z0-9]/ -> prefix -
}

test unit private tmux-subcommands %{
    Parameters: [ attach-session ]
    StdoutRegex: '(-[a-zA-Z]\n)+'
}

function tsplit {
    # Splits the current tmux session horizontally and runs a murex code block

    test state cmd { $cmd }
    test state pwd { $PWD }
    
    test state tmux {
        (tmux split -h ($SHELL --load-modules -c (cd $PWD; clear; source $cmd)))
    }

    test state shell {
        ($SHELL --load-modules -c (cd $PWD; clear; source $cmd))
    }

    if { $TMUX } then {
        trypipe {
            $ARGS[1] -> set cmd
            pwd -> set PWD
            tmux <state_cmd> <state_pwd> <state_tmux> <state_shell> \
                split -h ($SHELL --load-modules -c (cd $PWD; clear; sleep 4; echo $cmd; source $cmd; sleep 4))
        }
    } else {
        err "tmux is not running."
    }
}