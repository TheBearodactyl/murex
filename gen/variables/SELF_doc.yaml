- DocumentID: self
  Title: >-
    `SELF` (json)
  CategoryID: variables
  SubCategoryIDs: [ vars.reserved, vars.scoped ]
  Summary: >-
    Meta information about the running scope.
  Description: |-
    `SELF` returns information about the functional scope that the code is running
    inside. Such as whether that functions stdout is a TTY, running in the
    background or a method.

    A 'scope' in Murex is a collection of code blocks to which variables and
    config are persistent within. In Murex, a variable declared inside an `if` or
    `foreach` block will be persistent outside of their blocks as long as you're
    still inside the same function.

    Please read the {{link "scoping document" "scoping"}} for more information on scoping.

    {{ include "gen/includes/this-is-a-reserved-var.inc.md" }}
  Examples: |-
    ```
    » function example { $SELF }
    » example
    {
        "Background": false,
        "Interactive": true,
        "Method": false,
        "Module": "murex/shell",
        "Not": false,
        "Parent": 834,
        "Scope": 834,
        "TTY": true
    }
    ```
  Detail: |-
    ### Background (bool)

    A boolean value to identify whether the current scope is running in the
    background for foreground.

    ### Interactive (bool)

    A boolean value to describe whether the current scope is running interactively
    or not.

    An interactive scope is one where the shell prompt is running _and_ the scope
    isn't running in the background. Shell scripts are not considered interactive
    terminals even though they might have interactive element in their code.

    ### Method (bool)

    A boolean value to describe whether the current scope is a method (ie being
    called mid-way or at the end of a pipeline).

    ### Module (str)

    This will be the module string for the current scope.

    ### Not (bool)

    A boolean value which represents whether the function was called with a bang-
    prefix or not.

    ### Parent (num)

    This is the function ID of the parent function that created the scope. In
    some instances this will be the same value as scope FID. However if in doubt
    then please using **Scope** instead.

    ### Scope (num)

    The scope value here returns the function ID of the top level function in the
    scope.

    ### TTY (bool)

    A boolean value as to whether stdout is a TTY (ie are we printing to the
    terminal (TTY) or a pipe?)

  Synonyms:
  - self
  - SELF
  Related:
  - json
  - string
  - function
  - scoping
  - pipeline
  - modules
  - reserved-vars
  - interactive-shell

