[
    {
        "children": [
            {
                "link": "out.html",
                "text": "Output String (out)"
            },
            {
                "link": "tout.html",
                "text": "Output With Type Annotation (tout)"
            },
            {
                "link": "brace-quote-func.html",
                "text": "(brace quote)"
            },
            {
                "link": "err.html",
                "text": "Error String (err)"
            },
            {
                "link": "pt.html",
                "text": "Get Pipe Status (pt)"
            },
            {
                "link": "read.html",
                "text": "Read User Input (read)"
            },
            {
                "link": "tread.html",
                "text": "Read With Type (tread) (removed 7.x)"
            },
            {
                "link": "open-image.html",
                "text": "Render Image In Terminal (open-image)"
            },
            {
                "link": "namedpipe.html",
                "text": "Read / Write To A Named Pipe (\u003cpipe\u003e)"
            },
            {
                "link": "stdin.html",
                "text": "Read From Stdin (\u003cstdin\u003e)"
            },
            {
                "link": "pipe.html",
                "text": "Create Named Pipe (pipe)"
            }
        ],
        "collapsible": true,
        "text": "Input / Output Streams"
    },
    {
        "children": [
            {
                "link": "f.html",
                "text": "List Filesystem Objects (f)"
            },
            {
                "link": "file-truncate.html",
                "text": "Truncate File (\u003e)"
            },
            {
                "link": "g.html",
                "text": "Globbing (g)"
            },
            {
                "link": "lockfile.html",
                "text": "Lock Files (lockfile)"
            },
            {
                "link": "rx.html",
                "text": "Regex Matches (rx)"
            },
            {
                "link": "tmp.html",
                "text": "Create Temporary File (tmp)"
            },
            {
                "link": "open.html",
                "text": "Open File (open)"
            },
            {
                "link": "open-image.html",
                "text": "Render Image In Terminal (open-image)"
            }
        ],
        "collapsible": true,
        "text": "Filesystem Operations"
    },
    {
        "children": [
            {
                "link": "expr.html",
                "text": "expr"
            },
            {
                "link": "out.html",
                "text": "Output String (out)"
            },
            {
                "link": "read.html",
                "text": "Read User Input (read)"
            },
            {
                "link": "cd.html",
                "text": "Change Directory (cd)"
            },
            {
                "link": "type.html",
                "text": "Display Command Type (type)"
            },
            {
                "link": "which.html",
                "text": "Location Of Command (which)"
            },
            {
                "link": "alias.html",
                "text": "Alias Pointer (alias)"
            },
            {
                "link": "time.html",
                "text": "Processes Execution Time (time)"
            },
            {
                "link": "true.html",
                "text": "True (true)"
            },
            {
                "link": "false.html",
                "text": "False (false)"
            }
        ],
        "collapsible": true,
        "text": "Defined by POSIX"
    },
    {
        "children": [
            {
                "link": "count.html",
                "text": "Count (count)"
            },
            {
                "link": "item-index.html",
                "text": "Get Item ([ Index ])"
            },
            {
                "link": "prepend.html",
                "text": "Prepend To List (prepend)"
            },
            {
                "link": "append.html",
                "text": "Append To List (append)"
            },
            {
                "link": "list.case.html",
                "text": "Change Text Case (list.case)"
            },
            {
                "link": "mjoin.html",
                "text": "Join Array To String (mjoin)"
            },
            {
                "link": "msort.html",
                "text": "Sort Array (msort)"
            },
            {
                "link": "mtac.html",
                "text": "Reverse Array (mtac)"
            },
            {
                "link": "left.html",
                "text": "Left Sub-String (left)"
            },
            {
                "link": "right.html",
                "text": "Right Sub-String (right)"
            },
            {
                "link": "prefix.html",
                "text": "Add Prefix (prefix)"
            },
            {
                "link": "suffix.html",
                "text": "Add Suffix (suffix)"
            },
            {
                "link": "match.html",
                "text": "Match String (match)"
            },
            {
                "link": "regexp.html",
                "text": "Regex Operations (regexp)"
            },
            {
                "link": "a.html",
                "text": "Stream New List (a)"
            },
            {
                "link": "ja.html",
                "text": "Create JSON Array (ja)"
            },
            {
                "link": "ta.html",
                "text": "Create New Array (ta)"
            },
            {
                "link": "range.html",
                "text": "Filter By Range [ ..Range ]"
            },
            {
                "link": "foreach.html",
                "text": "For Each In List (foreach)"
            },
            {
                "link": "format.html",
                "text": "Reformat Data type (format)"
            }
        ],
        "collapsible": true,
        "text": "List / Array Editing"
    },
    {
        "children": [
            {
                "link": "escape.html",
                "text": "Quote String (escape)"
            },
            {
                "link": "eschtml.html",
                "text": "Escape HTML (eschtml)"
            },
            {
                "link": "escurl.html",
                "text": "Escape URL (escurl)"
            },
            {
                "link": "esccli.html",
                "text": "Escape Command Line String (esccli)"
            },
            {
                "link": "list.case.html",
                "text": "Change Text Case (list.case)"
            },
            {
                "link": "jsplit.html",
                "text": "Split String (jsplit)"
            },
            {
                "link": "left.html",
                "text": "Left Sub-String (left)"
            },
            {
                "link": "right.html",
                "text": "Right Sub-String (right)"
            },
            {
                "link": "regexp.html",
                "text": "Regex Operations (regexp)"
            },
            {
                "link": "pretty.html",
                "text": "Prettify JSON"
            },
            {
                "link": "rand.html",
                "text": "Generate Random Sequence (rand)"
            },
            {
                "link": "datetime.html",
                "text": "Date And Time Conversion (datetime)"
            },
            {
                "link": "format.html",
                "text": "Reformat Data type (format)"
            }
        ],
        "collapsible": true,
        "text": "String Manipulation"
    },
    {
        "children": [
            {
                "link": "expr.html",
                "text": "expr"
            },
            {
                "link": "rand.html",
                "text": "Generate Random Sequence (rand)"
            },
            {
                "link": "round.html",
                "text": "Round Number (round)"
            }
        ],
        "collapsible": true,
        "text": "Numeric / Math Tools"
    },
    {
        "children": [
            {
                "link": "2darray.html",
                "text": "Create 2d Array (2darray)"
            },
            {
                "link": "map.html",
                "text": "Create Map (map)"
            },
            {
                "link": "alter.html",
                "text": "Alter Data Structure (alter)"
            },
            {
                "link": "count.html",
                "text": "Count (count)"
            },
            {
                "link": "struct-keys.html",
                "text": "Print Map / Structure Keys (struct-keys)"
            },
            {
                "link": "element.html",
                "text": "Get Nested Element ([[ Element ]])"
            },
            {
                "link": "item-index.html",
                "text": "Get Item ([ Index ])"
            },
            {
                "link": "formap.html",
                "text": "For Each In Map (formap)"
            },
            {
                "link": "tabulate.html",
                "text": "Transformation Tools (tabulate)"
            },
            {
                "link": "format.html",
                "text": "Reformat Data type (format)"
            }
        ],
        "collapsible": true,
        "text": "Structured Data Management"
    },
    {
        "children": [
            {
                "link": "addheading.html",
                "text": "Add Heading (addheading)"
            },
            {
                "link": "formap.html",
                "text": "For Each In Map (formap)"
            },
            {
                "link": "tabulate.html",
                "text": "Transformation Tools (tabulate)"
            },
            {
                "link": "format.html",
                "text": "Reformat Data type (format)"
            },
            {
                "link": "select.html",
                "text": "Inline SQL (select)"
            }
        ],
        "collapsible": true,
        "text": "Table Management"
    },
    {
        "children": [
            {
                "link": "os.html",
                "text": "Operating System (os)"
            },
            {
                "link": "cpuarch.html",
                "text": "CPU Architecture (cpuarch)"
            },
            {
                "link": "cpucount.html",
                "text": "CPU Count (cpucount)"
            },
            {
                "link": "export.html",
                "text": "Define Environmental Variable (export)"
            }
        ],
        "collapsible": true,
        "text": "System Inspection"
    },
    {
        "children": [
            {
                "link": "autocomplete.html",
                "text": "Tab Autocompletion (autocomplete)"
            },
            {
                "link": "config.html",
                "text": "Shell Configuration And Settings (config)"
            },
            {
                "link": "debug.html",
                "text": "Debugging Mode (debug)"
            },
            {
                "link": "fexec.html",
                "text": "Execute Shell Function or Builtin (fexec)"
            },
            {
                "link": "murex-update-exe-list.html",
                "text": "Re-Scan $PATH For Executables"
            },
            {
                "link": "history.html",
                "text": "Command Line History (history)"
            },
            {
                "link": "summary.html",
                "text": "Set Command Summary Hint (summary)"
            },
            {
                "link": "source.html",
                "text": "Include / Evaluate Murex Code (source)"
            },
            {
                "link": "version.html",
                "text": "Murex Version (version)"
            },
            {
                "link": "murex-package.html",
                "text": "Murex Package Management (murex-package)"
            },
            {
                "link": "openagent.html",
                "text": "Define Handlers For \"open\" (openagent)"
            },
            {
                "link": "pipe.html",
                "text": "Create Named Pipe (pipe)"
            },
            {
                "link": "runtime.html",
                "text": "Shell Runtime (runtime)"
            },
            {
                "link": "alias.html",
                "text": "Alias Pointer (alias)"
            },
            {
                "link": "function.html",
                "text": "Public Function (function)"
            },
            {
                "link": "private.html",
                "text": "Private Function (private)"
            },
            {
                "link": "method.html",
                "text": "Define Method Relationships (method)"
            },
            {
                "link": "test.html",
                "text": "Shell Script Tests (test)"
            },
            {
                "link": "event.html",
                "text": "event"
            }
        ],
        "collapsible": true,
        "text": "Shell / Murex Management"
    },
    {
        "children": [
            {
                "link": "escape.html",
                "text": "Quote String (escape)"
            },
            {
                "link": "eschtml.html",
                "text": "Escape HTML (eschtml)"
            },
            {
                "link": "escurl.html",
                "text": "Escape URL (escurl)"
            },
            {
                "link": "esccli.html",
                "text": "Escape Command Line String (esccli)"
            },
            {
                "link": "key-code.html",
                "text": "key-code"
            }
        ],
        "collapsible": true,
        "text": "String Escaping / Character Codes"
    },
    {
        "children": [
            {
                "link": "exitnum.html",
                "text": "Get Exit Code (exitnum)"
            },
            {
                "link": "bexists.html",
                "text": "Check Builtin Exists (bexists)"
            },
            {
                "link": "source.html",
                "text": "Include / Evaluate Murex Code (source)"
            },
            {
                "link": "which.html",
                "text": "Location Of Command (which)"
            },
            {
                "link": "bg.html",
                "text": "Background Process (bg)"
            },
            {
                "link": "fg.html",
                "text": "Foreground Process (fg)"
            },
            {
                "link": "fid-list.html",
                "text": "Display Running Functions (fid-list)"
            },
            {
                "link": "fid-kill.html",
                "text": "Kill Function (fid-kill)"
            },
            {
                "link": "fid-killall.html",
                "text": "Kill All In Session (fid-killall)"
            },
            {
                "link": "time.html",
                "text": "Processes Execution Time (time)"
            },
            {
                "link": "exec.html",
                "text": "Execute External Command (exec)"
            },
            {
                "link": "signal.html",
                "text": "signal"
            }
        ],
        "collapsible": true,
        "text": "Process Management"
    },
    {
        "children": [
            {
                "link": "expr.html",
                "text": "expr"
            },
            {
                "link": "args.html",
                "text": "Define Function Arguments (args)"
            },
            {
                "link": "and.html",
                "text": "Logic And Statements (and)"
            },
            {
                "link": "or.html",
                "text": "Logic Or Statements (or)"
            },
            {
                "link": "return.html",
                "text": "Exit Function (return)"
            },
            {
                "link": "break.html",
                "text": "Exit Block (break)"
            },
            {
                "link": "continue.html",
                "text": "Next Iteration (continue)"
            },
            {
                "link": "for.html",
                "text": "For Loop (for)"
            },
            {
                "link": "foreach.html",
                "text": "For Each In List (foreach)"
            },
            {
                "link": "formap.html",
                "text": "For Each In Map (formap)"
            },
            {
                "link": "function.html",
                "text": "Public Function (function)"
            },
            {
                "link": "private.html",
                "text": "Private Function (private)"
            },
            {
                "link": "if.html",
                "text": "If Conditional (if)"
            },
            {
                "link": "switch.html",
                "text": "Switch Conditional (switch)"
            },
            {
                "link": "while.html",
                "text": "Loop While (while)"
            },
            {
                "link": "get-type.html",
                "text": "Get Data Type (get-type)"
            },
            {
                "link": "is-null.html",
                "text": "Is Value Null (is-null)"
            },
            {
                "link": "exit.html",
                "text": "Exit Murex (exit)"
            },
            {
                "link": "devnull.html",
                "text": "Null (null)"
            },
            {
                "link": "not-func.html",
                "text": "Not (!)"
            },
            {
                "link": "cast.html",
                "text": "Define Type (cast)"
            },
            {
                "link": "set.html",
                "text": "Define Variable (set)"
            },
            {
                "link": "global.html",
                "text": "Define Global (global)"
            }
        ],
        "collapsible": true,
        "text": "Language And Scripting"
    },
    {
        "children": [
            {
                "link": "unsafe.html",
                "text": "Disable Error Handling In Block (unsafe)"
            },
            {
                "link": "try.html",
                "text": "Try Block (try)"
            },
            {
                "link": "trypipe.html",
                "text": "Pipe Fail (trypipe)"
            },
            {
                "link": "catch.html",
                "text": "Caught Error Block (catch)"
            },
            {
                "link": "runmode.html",
                "text": "Function / Module Defaults (runmode)"
            },
            {
                "link": "tryerr.html",
                "text": "Stderr Checking In TTY (tryerr)"
            },
            {
                "link": "trypipeerr.html",
                "text": "Stderr Checking In Pipes (trypipeerr)"
            }
        ],
        "collapsible": true,
        "text": "Error Handling"
    },
    {
        "children": [
            {
                "link": "man-summary.html",
                "text": "Man-Page Summary (man-summary)"
            },
            {
                "link": "summary.html",
                "text": "Set Command Summary Hint (summary)"
            },
            {
                "link": "man-get-flags.html",
                "text": "Parse Man-Page For Flags (man-get-flags)"
            },
            {
                "link": "murex-docs.html",
                "text": "Murex's Offline Documentation (murex-docs)"
            }
        ],
        "collapsible": true,
        "text": "Help and Hint Tools"
    },
    {
        "link": "murex-parser.html",
        "text": "murex-parser"
    },
    {
        "link": "let.html",
        "text": "let"
    },
    {
        "link": "die.html",
        "text": "die"
    }
]