- DocumentID: expr
  Title: >+
    `expr`
  CategoryID: commands
  Summary: >-
    Expressions: mathematical, string comparisons, logical operators
  Description: |-
    `expr` is the underlying builtin which handles all expression parsing and
    evaluation in Murex. Though typically that would happen transparently without
    you having to explicit call `expr`.

    For a full list of operators supported exclusively in expression, see the
    last section in this document.
  Usage: |-
    ```
    expression -> <stdout>

    statement (expression)

    expr expression -> <stdout>
    ```
  Examples: |-
    **Order of operations:**

    ```
    » 3 * (3 + 1)                                                                                                                                                                                                                         
    12
    ```

    (For more details see below)

    **JSON array:**

    ```
    » %[apples oranges grapes]
    [
        "apples",
        "oranges",
        "grapes"
    ]
    ```
  Detail: |-
    ### Order of Operations

    The order of operations follows the same rules as the C programming language,
    which itself is an extension of the order of operations in mathematics, often
    referred to as PEMDAS or MODMAS ([read more](https://en.wikipedia.org/wiki/Order_of_operations)).

    The [Wikipedia article](https://en.wikipedia.org/wiki/Order_of_operations#Programming_languages)
    summarises that order succinctly however the detailed specification is defined
    by its implementation, as seen in the code below:

    ```go
    {{ include "lang/expressions/expression.go" }}
    ```
  Synonyms:
  Related:
    - addition
    - subtraction
    - multiplication
    - division
    - add-with
    - subtract-by
    - multiply-by
    - divide-by
    - elvis
    - null-coalescing
